AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  state_machine_base

  Sample SAM Template for state_machine_base

Parameters:
  GlueS3Bucket:
    Type: String
    Default: aws-glue-scripts-m3d1pb
    Description: "Enter S3 bucket name for Glue scripts"
  GlueJobName1:
    Type: String
    Default: sam-sm-base-gluejob1
  GlueJobName2:
    Type: String
    Default: sam-sm-base-gluejob2

Resources:
  ParentStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/state_machine1.asl.json
      DefinitionSubstitutions:
        ChildStateMachineArn: !Ref ChildStateMachine
      Events:
        HourlySchedule:
          Type: Schedule
          Properties:
            Description: Schedule to run this state machine every hour
            Enabled: False
            Schedule: "rate(1 hour)"
      Role: !GetAtt StatesExecutionRole.Arn

  ChildStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/state_machine2.asl.json
      DefinitionSubstitutions:
        GlueJobName1: !Ref GlueJobName1
        GlueJobName2: !Ref GlueJobName2
      Role: !GetAtt StatesExecutionRole.Arn

  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
                - events.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:DescribeStateMachine"
                  - "states:StartExecution"
                  - "states:DeleteStateMachine"
                  - "states:ListExecutions"
                  - "states:UpdateStateMachine"
                  - "events:PutTargets"
                  - "events:PutRule"
                  - "events:DescribeRule"
                  - "glue:*"
                Resource: "*"

  GlueJob1:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: 
          !Join [ '', ['s3://', !Ref GlueS3Bucket, '/scripts/glue_job1.py']]
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
      ExecutionProperty:
        MaxConcurrentRuns: 2
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 0.0625
      Name: !Ref GlueJobName1
      Role: !Ref GlueJobRole
  GlueJob2:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: 
          !Join [ '', ['s3://', !Ref GlueS3Bucket, '/scripts/glue_job2.py']]
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
      ExecutionProperty:
        MaxConcurrentRuns: 2
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 0.0625
      Name: !Ref GlueJobName2
      Role: !Ref GlueJobRole
  GlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "GlueJobExecutionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "glue:*"
                  - "s3:GetBucketLocation"
                  - "s3:ListBucket"
                  - "s3:ListAllMyBuckets"
                  - "s3:GetBucketAcl"
                  - "ec2:DescribeVpcEndpoints"
                  - "ec2:DescribeRouteTables"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcAttribute"
                  - "iam:ListRolePolicies"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "cloudwatch:PutMetricData"                
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "s3:CreateBucket"
                Resource: "arn:aws:s3:::aws-glue-*"
              - Effect: "Allow"
                Action:
                  - "s3:CreateBucket"
                Resource: "arn:aws:s3:::aws-glue-*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                Resource: 
                  - "arn:aws:s3:::aws-glue-*/*"
                  - "arn:aws:s3:::*/*aws-glue-*/*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource: 
                  - "arn:aws:s3:::crawler-public*"
                  - "arn:aws:s3:::aws-glue-*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:AssociateKmsKey"                
                Resource: 
                  - "arn:aws:logs:*:*:/aws-glue/*"
              - Effect: "Allow"
                Action:
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                Condition:
                  ForAllValues:StringEquals:
                    aws:TagKeys:
                      - "aws-glue-service-resource"
                Resource: 
                  - "arn:aws:ec2:*:*:network-interface/*"
                  - "arn:aws:ec2:*:*:security-group/*"
                  - "arn:aws:ec2:*:*:instance/*"
